// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthorPublicationsContainer passes all props to embedded search 1`] = `
<EmbeddedSearch
  aggregations={
    Immutable.Map {
      "agg1": Immutable.Map {
        "foo": "bar",
      },
    }
  }
  error={
    Immutable.Map {
      "message": "Error",
    }
  }
  loadingAggregations={true}
  loadingResults={true}
  numberOfResults={0}
  onQueryChange={[Function]}
  query={
    Object {
      "page": 2,
      "q": "dude",
      "size": 10,
      "sort": "mostrecent",
    }
  }
  renderResultItem={[MockFunction]}
  results={
    Immutable.List [
      Immutable.Map {
        "control_number": 1,
      },
      Immutable.Map {
        "control_number": 2,
      },
    ]
  }
  sortOptions={
    Array [
      Object {
        "display": "Most Recent",
        "value": "mostrecent",
      },
    ]
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
/>
`;
